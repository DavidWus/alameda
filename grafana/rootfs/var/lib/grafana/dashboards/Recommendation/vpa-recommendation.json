{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "iteration": 1565251885176,
  "links": [],
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 12,
      "panels": [],
      "title": "Managed Objects",
      "type": "row"
    },
    {
      "columns": [],
      "datasource": "InfluxDB",
      "description": "",
      "fontSize": "100%",
      "gridPos": {
        "h": 6,
        "w": 16,
        "x": 0,
        "y": 1
      },
      "id": 5,
      "links": [],
      "pageSize": null,
      "scroll": true,
      "showHeader": true,
      "sort": {
        "col": 0,
        "desc": true
      },
      "styles": [
        {
          "alias": "Time",
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "pattern": "Time",
          "type": "hidden"
        },
        {
          "alias": "",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "restart_count",
          "thresholds": [],
          "type": "hidden",
          "unit": "decgbytes"
        },
        {
          "alias": "",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "name",
          "thresholds": [],
          "type": "hidden",
          "unit": "short"
        },
        {
          "alias": "",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "alameda_scaler_namespace",
          "thresholds": [],
          "type": "hidden",
          "unit": "short"
        },
        {
          "alias": "",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "alameda_scaler_name",
          "thresholds": [],
          "type": "hidden",
          "unit": "short"
        },
        {
          "alias": "",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "pod_name",
          "thresholds": [],
          "type": "hidden",
          "unit": "short"
        },
        {
          "alias": "Application Name",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "alameda scaler",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "Project (Namespace)",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "namespace",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "Pod Name",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "pod",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "Container Name",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "container",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "Node Name",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "node",
          "thresholds": [],
          "type": "number",
          "unit": "short"
        },
        {
          "alias": "Policy",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "policy",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "decimals": 2,
          "pattern": "/.*/",
          "thresholds": [],
          "type": "number",
          "unit": "short"
        }
      ],
      "targets": [
        {
          "expr": "count(up{job=\"kubernetes-nodes\"})",
          "format": "table",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "intervalFactor": 1,
          "orderByTime": "ASC",
          "policy": "default",
          "query": "select restart_count, \"name\" as \"container\",  \"namespace\", \"pod_name\" as pod, \"node_name\" as node from alameda_cluster_status..container where \"pod_name\" =~ /^[[all_pod]]$/ and \"namespace\" =~ /^[[all_ns]]$/",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        },
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "orderByTime": "ASC",
          "policy": "default",
          "query": "select \"policy\", \"alameda_scaler_name\" as \"alameda scaler\", \"name\" as pod from alameda_cluster_status..pod where (\"name\" =~ /^[[all_pod]]$/ and \"namespace\" =~ /^[[all_ns]]$/) or ('Container' = '$resource' and scaling_tool= 'VPA')",
          "rawQuery": true,
          "refId": "B",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Managed Containers",
      "transform": "table",
      "transparent": false,
      "type": "table"
    },
    {
      "columns": [],
      "datasource": "InfluxDB",
      "fontSize": "100%",
      "gridPos": {
        "h": 6,
        "w": 8,
        "x": 16,
        "y": 1
      },
      "id": 4,
      "links": [],
      "pageSize": null,
      "scroll": true,
      "showHeader": true,
      "sort": {
        "col": 4,
        "desc": true
      },
      "styles": [
        {
          "alias": "Time",
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "pattern": "Time",
          "type": "hidden"
        },
        {
          "alias": "",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "in_cluster",
          "thresholds": [],
          "type": "hidden",
          "unit": "short"
        },
        {
          "alias": "Memory Size",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "node_memory_bytes",
          "thresholds": [],
          "type": "number",
          "unit": "bytes"
        },
        {
          "alias": "CPU Cores",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 0,
          "mappingType": 1,
          "pattern": "node_cpu_cores",
          "thresholds": [],
          "type": "number",
          "unit": "short"
        },
        {
          "alias": "Node Name",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "name",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "Created Time",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "create_time",
          "thresholds": [],
          "type": "date",
          "unit": "short"
        },
        {
          "alias": "",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "decimals": 2,
          "pattern": "/.*/",
          "thresholds": [],
          "type": "number",
          "unit": "short"
        }
      ],
      "targets": [
        {
          "expr": "count(up{job=\"kubernetes-nodes\"})",
          "format": "table",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "intervalFactor": 1,
          "orderByTime": "ASC",
          "policy": "default",
          "query": "select create_time *1000 , \"name\", node_cpu_cores, node_memory_bytes, in_cluster from alameda_cluster_status..node",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Managed Nodes",
      "transform": "table",
      "transparent": false,
      "type": "table"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 7
      },
      "id": 7,
      "panels": [],
      "title": "Container Resource Usage and Recommendation",
      "type": "row"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "-- Mixed --",
      "fill": 0,
      "gridPos": {
        "h": 7,
        "w": 24,
        "x": 0,
        "y": 8
      },
      "height": "",
      "id": 9,
      "interval": ">30s",
      "legend": {
        "avg": false,
        "current": false,
        "hideEmpty": false,
        "hideZero": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 2,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [
        {
          "alias": "Observation : CPU Usage",
          "color": "#5195ce"
        },
        {
          "alias": "Recommendation: CPU Limit",
          "color": "#f2c96d",
          "steppedLine": true
        },
        {
          "alias": "Recommendation: CPU Request",
          "color": "#7eb26d",
          "steppedLine": true
        },
        {
          "alias": "Prediction: CPU Usage",
          "color": "#f9e2d2",
          "dashLength": 5,
          "dashes": true,
          "spaceLength": 4
        },
        {
          "alias": "Prediction: CPU usage upperbound(in 15 minutes)",
          "color": "#f9e2d2",
          "fillBelowTo": "Prediction: CPU usage lowerbound(in 15 minutes)",
          "hideTooltip": true,
          "legend": false,
          "lines": false
        },
        {
          "alias": "Prediction: CPU usage lowerbound(in 15 minutes)",
          "color": "#f9e2d2",
          "hideTooltip": true,
          "legend": false,
          "lines": false
        },
        {
          "alias": "Observation: CPU Usage",
          "color": "#5195ce"
        }
      ],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "datasource": "Prometheus",
          "expr": "sum(1000 * max_over_time(namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate{namespace=~\"$h_ns\", pod_name=~\"$h_pod\", container_name=~\"$pre_container\", container_name!=\"\"}[30s]))",
          "format": "time_series",
          "hide": false,
          "instant": false,
          "interval": "30s",
          "intervalFactor": 1,
          "legendFormat": "Observation : CPU Usage",
          "refId": "C"
        },
        {
          "alias": "Recommendation: CPU Limit",
          "datasource": "InfluxDB",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "orderByTime": "ASC",
          "policy": "default",
          "query": "select sum from (select sum(resource_limit_cpu) from \"alameda_recommendation\"..\"container\" where granularity = '30' and \"name\" =~ /^[[h_container]]$/ and \"pod_name\" =~ /^[[h_pod]]$/ and \"namespace\" =~ /^[[h_ns]]$/  AND time>=now()-1h and time < now() group by time($recomInterval)  fill(none)), (select sum from (select sum(resource_limit_cpu),count(resource_limit_cpu) from \"alameda_recommendation\"..\"container\" where granularity = '30' and \"pod_name\" =~ /^[[h_pod]]$/ and \"namespace\" =~ /^[[h_ns]]$/ AND time>=now() and time <= now()+15m group by time($recomInterval) fill(none)) where count = $count_container + 0)",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        },
        {
          "alias": "Recommendation: CPU Request",
          "datasource": "InfluxDB",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "orderByTime": "ASC",
          "policy": "default",
          "query": "select sum from (select sum(resource_request_cpu) from \"alameda_recommendation\"..\"container\" where granularity = '30' and \"name\" =~ /^[[h_container]]$/ and \"pod_name\" =~ /^[[h_pod]]$/ and \"namespace\" =~ /^[[h_ns]]$/  AND time>=now()-1h and time < now() group by  time($recomInterval) fill(none)), (select sum from (select sum(resource_request_cpu ), count(resource_request_cpu) from \"alameda_recommendation\"..\"container\" where granularity = '30' and \"pod_name\" =~ /^[[h_pod]]$/ and \"namespace\" =~ /^[[h_ns]]$/ AND time>=now() and time <= now()+15m group by time($recomInterval) fill(none)) where count = $count_container + 0)",
          "rawQuery": true,
          "refId": "D",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        },
        {
          "alias": "Prediction: CPU Usage",
          "datasource": "InfluxDB",
          "groupBy": [],
          "hide": false,
          "measurement": "node_prediction",
          "orderByTime": "ASC",
          "policy": "node_prediction",
          "query": "select * from\n( select sum(value) from \"alameda_prediction\"..\"namespace\" where kind = 'raw' and granularity = '30' and \"name\" =~ /^[[h_ns]]$/ and \"metric\" = 'cpu_usage_seconds_percentage' and time >= now() - 1h and time <= now() + 15m and 'Cluster' = '$resource' group by time(30s)),\n( select sum(value) from \"alameda_prediction\"..\"namespace\" where kind = 'raw' and granularity = '30' and \"metric\" = 'cpu_usage_seconds_percentage' and time >= now() - 1h and time <= now() + 15m and 'Namespace' = '$resource' and \"name\" = '$ns' group by time(30s)),\n( select sum(value)from \"alameda_prediction\"..\"application\" where kind = 'raw' and granularity = '30' and \"metric\" = 'cpu_usage_seconds_percentage' and time >= now() - 1h and time <= now() + 15m and namespace = '$ns' and \"name\" = '$scaler' and 'Application' = '$resource' group by time(30s)),\n( select sum(value) from \"alameda_prediction\"..\"container\" where kind = 'raw' and granularity = '30' and \"metric\" = 'cpu_usage_seconds_percentage' and time >= now() - 1h and time <= now() + 15m and \"name\" = '$container' and pod_name = '$pod' and 'Container' = '$resource' group by time(30s))",
          "rawQuery": true,
          "refId": "B",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              }
            ]
          ],
          "tags": [
            {
              "key": "node",
              "operator": "=",
              "value": "ip-172-23-1-91.us-east-2.compute.internal"
            },
            {
              "condition": "AND",
              "key": "type",
              "operator": "=",
              "value": "cpu"
            }
          ]
        },
        {
          "alias": "Prediction: CPU usage upperbound(in 15 minutes)",
          "datasource": "InfluxDB",
          "groupBy": [],
          "hide": true,
          "measurement": "node_prediction",
          "orderByTime": "ASC",
          "policy": "node_prediction",
          "query": "select * from \n( select sum(value) from \"alameda_prediction\"..\"cluster\" where kind = 'upper_bound' and granularity = '30' and \"metric\" = 'cpu_usage_seconds_percentage' and time >= now() and time <= now() + 15m and 'Cluster' = '$resource' group by time(30s)),\n( select sum(value) from \"alameda_prediction\"..\"namespace\" where kind = 'upper_bound' and granularity = '30' and \"metric\" = 'cpu_usage_seconds_percentage' and time >= now() and time <= now() + 15m and 'Namespace' = '$resource' and \"name\" = '$ns' group by time(30s)),\n( select sum(value) from \"alameda_prediction\"..\"application\" where kind = 'upper_bound' and granularity = '30' and \"metric\" = 'cpu_usage_seconds_percentage' and time >= now() and time <= now() + 15m and \"name\" = '$scaler' and 'Application' = '$resource' group by time(30s)),\n( select sum(value) from \"alameda_prediction\"..\"container\" where kind = 'upper_bound' and granularity = '30' and \"metric\" = 'cpu_usage_seconds_percentage' and time >= now() and time <= now() + 15m and \"name\" = '$container' and pod_name = '$pod' and 'Container' = '$resource' group by time(30s))",
          "rawQuery": true,
          "refId": "F",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              }
            ]
          ],
          "tags": [
            {
              "key": "node",
              "operator": "=",
              "value": "ip-172-23-1-91.us-east-2.compute.internal"
            },
            {
              "condition": "AND",
              "key": "type",
              "operator": "=",
              "value": "cpu"
            }
          ]
        },
        {
          "alias": "Prediction: CPU usage lowerbound(in 15 minutes)",
          "datasource": "InfluxDB",
          "groupBy": [],
          "hide": true,
          "measurement": "node_prediction",
          "orderByTime": "ASC",
          "policy": "node_prediction",
          "query": "select * from \n( select sum(value) from \"alameda_prediction\"..\"cluster\" where kind = 'lower_bound' and granularity = '30' and \"metric\" = 'cpu_usage_seconds_percentage' and time >= now() and time <= now() + 15m and 'Cluster' = '$resource' group by time(30s)),\n( select sum(value) from \"alameda_prediction\"..\"namespace\" where kind = 'lower_bound' and granularity = '30' and \"metric\" = 'cpu_usage_seconds_percentage' and time >= now() and time <= now() + 15m and 'Namespace' = '$resource' and \"name\" = '$ns' group by time(30s)),\n( select sum(value) from \"alameda_prediction\"..\"application\" where kind = 'lower_bound' and granularity = '30' and \"metric\" = 'cpu_usage_seconds_percentage' and time >= now() and time <= now() + 15m and \"name\" = '$scaler' and 'Application' = '$resource' group by time(30s)),\n( select sum(value) from \"alameda_prediction\"..\"container\" where kind = 'lower_bound' and granularity = '30' and \"metric\" = 'cpu_usage_seconds_percentage' and time >= now() and time <= now() + 15m and \"name\" = '$container' and pod_name = '$pod' and 'Container' = '$resource' group by time(30s))",
          "rawQuery": true,
          "refId": "G",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              }
            ]
          ],
          "tags": [
            {
              "key": "node",
              "operator": "=",
              "value": "ip-172-23-1-91.us-east-2.compute.internal"
            },
            {
              "condition": "AND",
              "key": "type",
              "operator": "=",
              "value": "cpu"
            }
          ]
        },
        {
          "alias": "Observation: CPU Usage",
          "datasource": "InfluxDB",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "default",
          "query": "select sum(mean) from ( select mean(value) from alameda_metric..container_cpu where \"pod_namespace\" =~ /^[[h_ns]]$/ and \"pod_name\" =~ /^[[h_pod]]$/ and \"name\" =~  /^[[h_container]]$/ and $timeFilter and 'true' = '$preloader' group by time(30s), pod_name) group by time(30s)",
          "rawQuery": true,
          "refId": "E",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "CPU: Observation, Prediction, and Recommendation (in CPU milicore)",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "decimals": 2,
          "format": "none",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "decimals": 0,
          "format": "none",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "-- Mixed --",
      "fill": 0,
      "gridPos": {
        "h": 7,
        "w": 24,
        "x": 0,
        "y": 15
      },
      "height": "",
      "id": 10,
      "interval": ">30s",
      "legend": {
        "avg": false,
        "current": false,
        "hideEmpty": false,
        "hideZero": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 2,
      "links": [],
      "nullPointMode": "null",
      "percentage": false,
      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [
        {
          "alias": "Observation: Memory Usage",
          "color": "#5195ce"
        },
        {
          "alias": "Recommendation: Memory Limit",
          "color": "#f2c96d",
          "steppedLine": true
        },
        {
          "alias": "Recommendation: Memory Request",
          "color": "#7eb26d",
          "steppedLine": true
        },
        {
          "alias": "Prediction: Memory Usage",
          "color": "#f9e2d2",
          "dashLength": 5,
          "dashes": true,
          "spaceLength": 4
        },
        {
          "alias": "Prediction: memory usage upperbound(in 15 minutes)",
          "color": "#f9e2d2",
          "fillBelowTo": "Prediction: memory usage lowerbound(in 15 minutes)",
          "hideTooltip": true,
          "legend": false,
          "lines": false
        },
        {
          "alias": "Prediction: memory usage lowerbound(in 15 minutes)",
          "color": "#f9e2d2",
          "hideTooltip": true,
          "legend": false,
          "lines": false
        },
        {
          "alias": "Observation: Memory Usage",
          "color": "#5195ce"
        }
      ],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "datasource": "Prometheus",
          "expr": "round(sum(max_over_time(container_memory_usage_bytes{namespace=~\"$h_ns\", pod_name=~\"$h_pod\", container_name=~\"$pre_container\", container_name!=\"\"}[30s])))",
          "format": "time_series",
          "hide": false,
          "instant": false,
          "interval": "30s",
          "intervalFactor": 1,
          "legendFormat": "Observation: Memory Usage",
          "refId": "C"
        },
        {
          "alias": "Recommendation: Memory Limit",
          "datasource": "InfluxDB",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "orderByTime": "ASC",
          "policy": "default",
          "query": "select round(sum) from (select sum(resource_limit_memory) from \"alameda_recommendation\"..\"container\" where granularity = '30' and \"name\" =~ /^[[h_container]]$/ and \"pod_name\" =~ /^[[h_pod]]$/ and \"namespace\" =~ /^[[h_ns]]$/  AND time>=now()-1h and time < now() group by time($recomInterval) fill(none)), (select sum from (select sum(resource_limit_memory ), count(resource_limit_memory) from \"alameda_recommendation\"..\"container\" where \"pod_name\" =~ /^[[h_pod]]$/ and granularity = '30' and \"namespace\" =~ /^[[h_ns]]$/ AND time>=now() and time <= now()+20m group by time($recomInterval) fill(none)) where count = $count_container + 0)",
          "rawQuery": true,
          "refId": "B",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        },
        {
          "alias": "Recommendation: Memory Request",
          "datasource": "InfluxDB",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "orderByTime": "ASC",
          "policy": "default",
          "query": "select round(sum) from (select sum(resource_request_memory) from \"alameda_recommendation\"..\"container\" where granularity = '30' and \"name\" =~ /^[[h_container]]$/ and \"pod_name\" =~ /^[[h_pod]]$/ and \"namespace\" =~ /^[[h_ns]]$/  AND time>=now()-1h and time < now() group by time($recomInterval) fill(none)), (select sum from (select sum(resource_request_memory ), count(resource_request_memory) from \"alameda_recommendation\"..\"container\" where \"pod_name\" =~ /^[[h_pod]]$/ and granularity = '30' and \"namespace\" =~ /^[[h_ns]]$/ AND time>=now() and time <= now()+20m group by time($recomInterval) fill(none)) where count = $count_container + 0)",
          "rawQuery": true,
          "refId": "D",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        },
        {
          "alias": "Prediction: Memory Usage",
          "datasource": "InfluxDB",
          "groupBy": [],
          "hide": false,
          "measurement": "node_prediction",
          "orderByTime": "ASC",
          "policy": "node_prediction",
          "query": "select * from \n( select sum(value) from \"alameda_prediction\"..\"namespace\" where kind = 'raw' and granularity = '30' and \"name\" =~ /^[[h_ns]]$/ and \"metric\" = 'memory_usage_bytes' and time >= now() - 1h and time <= now() + 15m and 'Cluster' = '$resource' group by time(30s)),\n( select sum(value) from \"alameda_prediction\"..\"namespace\" where kind = 'raw' and granularity = '30' and \"metric\" = 'memory_usage_bytes' and time >= now() - 1h and time <= now() + 15m and 'Namespace' = '$resource' and \"name\" = '$ns' group by time(30s)),\n( select sum(value) from \"alameda_prediction\"..\"application\" where kind = 'raw' and granularity = '30' and \"metric\" = 'memory_usage_bytes' and time >= now() - 1h and time <= now() + 15m and namespace = '$ns' and \"name\" = '$scaler' and 'Application' = '$resource' group by time(30s)),\n( select sum(value) from \"alameda_prediction\"..\"container\" where kind = 'raw' and granularity = '30' and \"metric\" = 'memory_usage_bytes' and time >= now() - 1h and time <= now() + 15m and \"name\" = '$container' and pod_name = '$pod' and 'Container' = '$resource' group by time(30s))",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              }
            ]
          ],
          "tags": []
        },
        {
          "alias": "Prediction: memory usage upperbound(in 15 minutes)",
          "datasource": "InfluxDB",
          "groupBy": [],
          "hide": true,
          "measurement": "node_prediction",
          "orderByTime": "ASC",
          "policy": "node_prediction",
          "query": "select * from \n( select sum(value) from \"alameda_prediction\"..\"cluster\" where kind = 'upper_bound' and granularity = '30' and \"metric\" = 'memory_usage_bytes' and time >= now() and time <= now() + 15m and 'Cluster' = '$resource' group by time(30s)),\n( select sum(value) from \"alameda_prediction\"..\"namespace\" where kind = 'upper_bound' and granularity = '30' and \"metric\" = 'memory_usage_bytes' and time >= now() and time <= now() + 15m and 'Namespace' = '$resource' and \"name\" = '$ns' group by time(30s)),\n( select sum(value) from \"alameda_prediction\"..\"application\" where kind = 'upper_bound' and granularity = '30' and \"metric\" = 'memory_usage_bytes' and time >= now() and time <= now() + 15m and \"name\" = '$scaler' and 'Application' = '$resource' group by time(30s)),\n( select sum(value) from \"alameda_prediction\"..\"container\" where kind = 'upper_bound' and granularity = '30' and \"metric\" = 'memory_usage_bytes' and time >= now() and time <= now() + 15m and \"name\" = '$container' and pod_name = '$pod' and 'Container' = '$resource' group by time(30s))",
          "rawQuery": true,
          "refId": "E",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              }
            ]
          ],
          "tags": [
            {
              "key": "node",
              "operator": "=",
              "value": "ip-172-23-1-91.us-east-2.compute.internal"
            },
            {
              "condition": "AND",
              "key": "type",
              "operator": "=",
              "value": "cpu"
            }
          ]
        },
        {
          "alias": "Prediction: memory usage lowerbound(in 15 minutes)",
          "datasource": "InfluxDB",
          "groupBy": [],
          "hide": true,
          "measurement": "node_prediction",
          "orderByTime": "ASC",
          "policy": "node_prediction",
          "query": "select * from \n( select sum(value) from \"alameda_prediction\"..\"cluster\" where kind = 'lower_bound' and granularity = '30' and \"metric\" = 'memory_usage_bytes' and time >= now() and time <= now() + 15m and 'Cluster' = '$resource' group by time(30s)),\n( select sum(value) from \"alameda_prediction\"..\"namespace\" where kind = 'lower_bound' and granularity = '30' and \"metric\" = 'memory_usage_bytes' and time >= now() and time <= now() + 15m and 'Namespace' = '$resource' and \"name\" = '$ns' group by time(30s)),\n( select sum(value) from \"alameda_prediction\"..\"application\" where kind = 'lower_bound' and granularity = '30' and \"metric\" = 'memory_usage_bytes' and time >= now() and time <= now() + 15m and \"name\" = '$scaler' and 'Application' = '$resource' group by time(30s)),\n( select sum(value) from \"alameda_prediction\"..\"container\" where kind = 'lower_bound' and granularity = '30' and \"metric\" = 'memory_usage_bytes' and time >= now() and time <= now() + 15m and \"name\" = '$container' and pod_name = '$pod' and 'Container' = '$resource' group by time(30s))",
          "rawQuery": true,
          "refId": "F",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              }
            ]
          ],
          "tags": [
            {
              "key": "node",
              "operator": "=",
              "value": "ip-172-23-1-91.us-east-2.compute.internal"
            },
            {
              "condition": "AND",
              "key": "type",
              "operator": "=",
              "value": "cpu"
            }
          ]
        },
        {
          "alias": "Observation: Memory Usage",
          "datasource": "InfluxDB",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "default",
          "query": "select sum(mean) from ( select mean(value) from alameda_metric..container_memory where \"pod_namespace\" =~ /^[[h_ns]]$/ and \"pod_name\" =~ /^[[h_pod]]$/ and \"name\" =~  /^[[h_container]]$/ and $timeFilter and 'true' = '$preloader' group by time(30s), pod_name) group by time(30s)",
          "rawQuery": true,
          "refId": "G",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Memory: Observation, Prediction, and Recommendation",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "decimals": 2,
          "format": "bytes",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "decimals": 0,
          "format": "none",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    }
  ],
  "refresh": "30s",
  "schemaVersion": 16,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "allValue": null,
        "current": {
          "text": "Application",
          "value": "Application"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Scope",
        "multi": false,
        "name": "resource",
        "options": [
          {
            "selected": true,
            "text": "Application",
            "value": "Application"
          },
          {
            "selected": false,
            "text": "Container",
            "value": "Container"
          }
        ],
        "query": "Application, Container",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {
          "text": "nginx-stable",
          "value": "nginx-stable"
        },
        "datasource": "InfluxDB",
        "definition": "select alameda_scaler_namespace,scaling_tool from alameda_cluster_status..pod where scaling_tool = 'VPA' and 'Cluster' != '$resource' group by \"alameda_scaler_namespace\" order by time desc limit 1",
        "hide": 0,
        "includeAll": false,
        "label": "Namespace",
        "multi": false,
        "name": "ns",
        "options": [],
        "query": "select alameda_scaler_namespace,scaling_tool from alameda_cluster_status..pod where scaling_tool = 'VPA' and 'Cluster' != '$resource' group by \"alameda_scaler_namespace\" order by time desc limit 1",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "nginx-vpa",
          "value": "nginx-vpa"
        },
        "datasource": "InfluxDB",
        "definition": "select alameda_scaler_name,scaling_tool from alameda_cluster_status..pod where \"alameda_scaler_namespace\" =~ /^[[ns]]$/ and scaling_tool= 'VPA' and 'Namespace' != '$resource' group by \"alameda_scaler_namespace\", \"alameda_scaler_name\" order by time desc limit 1",
        "hide": 0,
        "includeAll": false,
        "label": "Application",
        "multi": false,
        "name": "scaler",
        "options": [],
        "query": "select alameda_scaler_name,scaling_tool from alameda_cluster_status..pod where \"alameda_scaler_namespace\" =~ /^[[ns]]$/ and scaling_tool= 'VPA' and 'Namespace' != '$resource' group by \"alameda_scaler_namespace\", \"alameda_scaler_name\" order by time desc limit 1",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "nginx-554b9c67f9-qzm2h",
          "value": "nginx-554b9c67f9-qzm2h"
        },
        "datasource": "InfluxDB",
        "definition": "show tag values on alameda_cluster_status from pod with key = \"name\" where \"alameda_scaler_namespace\" =~ /^[[ns]]$/ and \"alameda_scaler_name\" =~ /^[[scaler]]$/ and 'Application' != '$resource' and 'Cluster' != '$resource' and 'Namespace' != '$resource'",
        "hide": 0,
        "includeAll": false,
        "label": "Pod",
        "multi": false,
        "name": "pod",
        "options": [],
        "query": "show tag values on alameda_cluster_status from pod with key = \"name\" where \"alameda_scaler_namespace\" =~ /^[[ns]]$/ and \"alameda_scaler_name\" =~ /^[[scaler]]$/ and 'Application' != '$resource' and 'Cluster' != '$resource' and 'Namespace' != '$resource'",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "nginx",
          "value": "nginx"
        },
        "datasource": "InfluxDB",
        "definition": "show tag values on alameda_cluster_status from container with key=\"name\" where \"namespace\" = '$ns' and \"pod_name\" = '$pod'",
        "hide": 0,
        "includeAll": false,
        "label": "Container",
        "multi": false,
        "name": "container",
        "options": [],
        "query": "show tag values on alameda_cluster_status from container with key=\"name\" where \"namespace\" = '$ns' and \"pod_name\" = '$pod'",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": "InfluxDB",
        "definition": "select alameda_scaler_namespace, scaling_tool from (select alameda_scaler_namespace,scaling_tool from alameda_cluster_status..pod where scaling_tool = 'VPA' and 'Cluster' = '$resource' group by \"alameda_scaler_namespace\" order by time desc limit 1), (select alameda_scaler_namespace,scaling_tool from alameda_cluster_status..pod where scaling_tool = 'VPA' and alameda_scaler_namespace = '$ns' group by \"alameda_scaler_namespace\" order by time desc limit 1) order by time desc",
        "hide": 2,
        "includeAll": true,
        "label": "Namespace",
        "multi": false,
        "name": "h_ns",
        "options": [],
        "query": "select alameda_scaler_namespace, scaling_tool from (select alameda_scaler_namespace,scaling_tool from alameda_cluster_status..pod where scaling_tool = 'VPA' and 'Cluster' = '$resource' group by \"alameda_scaler_namespace\" order by time desc limit 1), (select alameda_scaler_namespace,scaling_tool from alameda_cluster_status..pod where scaling_tool = 'VPA' and alameda_scaler_namespace = '$ns' group by \"alameda_scaler_namespace\" order by time desc limit 1) order by time desc",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": "InfluxDB",
        "definition": "select alameda_scaler_name,scaling_tool from (select alameda_scaler_name,scaling_tool from alameda_cluster_status..pod where \"alameda_scaler_namespace\" =~ /^[[h_ns]]$/ and scaling_tool= 'VPA' and ('Cluster' = '$resource' or 'Namespace' = '$resource') group by \"alameda_scaler_namespace\", \"alameda_scaler_name\" order by time desc limit 1), (select alameda_scaler_name,scaling_tool from alameda_cluster_status..pod where \"alameda_scaler_namespace\" =~ /^[[h_ns]]$/ and scaling_tool= 'VPA' and alameda_scaler_name = '$scaler' group by \"alameda_scaler_namespace\", \"alameda_scaler_name\" order by time desc limit 1) order by time desc",
        "hide": 2,
        "includeAll": true,
        "label": null,
        "multi": false,
        "name": "h_scaler",
        "options": [],
        "query": "select alameda_scaler_name,scaling_tool from (select alameda_scaler_name,scaling_tool from alameda_cluster_status..pod where \"alameda_scaler_namespace\" =~ /^[[h_ns]]$/ and scaling_tool= 'VPA' and ('Cluster' = '$resource' or 'Namespace' = '$resource') group by \"alameda_scaler_namespace\", \"alameda_scaler_name\" order by time desc limit 1), (select alameda_scaler_name,scaling_tool from alameda_cluster_status..pod where \"alameda_scaler_namespace\" =~ /^[[h_ns]]$/ and scaling_tool= 'VPA' and alameda_scaler_name = '$scaler' group by \"alameda_scaler_namespace\", \"alameda_scaler_name\" order by time desc limit 1) order by time desc",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": "InfluxDB",
        "definition": "select \"name\",scaling_tool from (select \"name\",scaling_tool from alameda_cluster_status..pod where \"alameda_scaler_namespace\" =~ /^[[h_ns]]$/ and \"alameda_scaler_name\" =~ /^[[h_scaler]]$/ and ('Cluster' = '$resource' or 'Application' = '$resource' or 'Namespace' = '$resource' ) group by \"name\" order by time desc limit 1), (select \"name\",scaling_tool from alameda_cluster_status..pod where \"alameda_scaler_namespace\" =~ /^[[h_ns]]$/ and \"alameda_scaler_name\" =~ /^[[h_scaler]]$/ and  \"name\" = '$pod' group by \"name\" order by time desc limit 1) order by time desc",
        "hide": 2,
        "includeAll": true,
        "label": "pod",
        "multi": false,
        "name": "h_pod",
        "options": [],
        "query": "select \"name\",scaling_tool from (select \"name\",scaling_tool from alameda_cluster_status..pod where \"alameda_scaler_namespace\" =~ /^[[h_ns]]$/ and \"alameda_scaler_name\" =~ /^[[h_scaler]]$/ and ('Cluster' = '$resource' or 'Application' = '$resource' or 'Namespace' = '$resource' ) group by \"name\" order by time desc limit 1), (select \"name\",scaling_tool from alameda_cluster_status..pod where \"alameda_scaler_namespace\" =~ /^[[h_ns]]$/ and \"alameda_scaler_name\" =~ /^[[h_scaler]]$/ and  \"name\" = '$pod' group by \"name\" order by time desc limit 1) order by time desc",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": "InfluxDB",
        "definition": "select \"name\", resource_limit_cpu from ( select \"name\", resource_limit_cpu from alameda_cluster_status..container where \"namespace\" =~ /^[[h_ns]]$/ and \"pod_name\" =~ /^[[h_pod]]$/ and ('Application' = '$resource' or 'Cluster' = '$resource' or 'Namespace' = '$resource') group by \"name\" order by time desc limit 1), ( select \"name\", resource_limit_cpu from alameda_cluster_status..container where \"namespace\" =~ /^[[h_ns]]$/ and \"pod_name\" = '$pod'  group by \"name\" order by time desc limit 1) order by time desc",
        "hide": 2,
        "includeAll": true,
        "label": null,
        "multi": false,
        "name": "h_container",
        "options": [],
        "query": "select \"name\", resource_limit_cpu from ( select \"name\", resource_limit_cpu from alameda_cluster_status..container where \"namespace\" =~ /^[[h_ns]]$/ and \"pod_name\" =~ /^[[h_pod]]$/ and ('Application' = '$resource' or 'Cluster' = '$resource' or 'Namespace' = '$resource') group by \"name\" order by time desc limit 1), ( select \"name\", resource_limit_cpu from alameda_cluster_status..container where \"namespace\" =~ /^[[h_ns]]$/ and \"pod_name\" = '$pod'  group by \"name\" order by time desc limit 1) order by time desc",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "1",
          "value": "1"
        },
        "datasource": "InfluxDB",
        "definition": "select count(uid) from (select uid, resource_request_cpu from (select uid, resource_request_cpu from alameda_cluster_status..container where \"pod_name\" =~ /^[[h_pod]]$/ and ('Cluster' = '$resource' or 'Namespace' = '$resource' or 'Application' = '$resource')), (select uid, resource_request_cpu from alameda_cluster_status..container where \"pod_name\" = '$pod' and 'Container' = '$resource'))",
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "count_container",
        "options": [],
        "query": "select count(uid) from (select uid, resource_request_cpu from (select uid, resource_request_cpu from alameda_cluster_status..container where \"pod_name\" =~ /^[[h_pod]]$/ and ('Cluster' = '$resource' or 'Namespace' = '$resource' or 'Application' = '$resource')), (select uid, resource_request_cpu from alameda_cluster_status..container where \"pod_name\" = '$pod' and 'Container' = '$resource'))",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "30s",
          "value": "30s"
        },
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "recomInterval",
        "options": [
          {
            "selected": true,
            "text": "30s",
            "value": "30s"
          }
        ],
        "query": "30s",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {
          "isNone": true,
          "text": "None",
          "value": ""
        },
        "datasource": "InfluxDB",
        "definition": "select preloader from alameda_metric..grafana_config order by time desc limit 1",
        "hide": 2,
        "includeAll": false,
        "label": "Preloader",
        "multi": false,
        "name": "preloader",
        "options": [],
        "query": "select preloader from alameda_metric..grafana_config order by time desc limit 1",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "selected": true,
          "text": "All",
          "value": "$__all"
        },
        "datasource": "InfluxDB",
        "definition": "select \"name\", resource_limit_cpu from ( select \"name\", resource_limit_cpu from alameda_cluster_status..container where \"namespace\" =~ /^[[h_ns]]$/ and \"pod_name\" =~ /^[[h_pod]]$/ and ('Application' = '$resource' or 'Namespace' = '$resource' or 'Cluster' = '$resource') group by \"name\" order by time desc limit 1), ( select \"name\", resource_limit_cpu from alameda_cluster_status..container where \"namespace\" =~ /^[[h_ns]]$/ and \"pod_name\" = '$pod'  group by \"name\" order by time desc limit 1) where ('false' = '$preloader' or '' = '$preloader') order by time desc",
        "hide": 2,
        "includeAll": true,
        "label": null,
        "multi": false,
        "name": "pre_container",
        "options": [],
        "query": "select \"name\", resource_limit_cpu from ( select \"name\", resource_limit_cpu from alameda_cluster_status..container where \"namespace\" =~ /^[[h_ns]]$/ and \"pod_name\" =~ /^[[h_pod]]$/ and ('Application' = '$resource' or 'Namespace' = '$resource' or 'Cluster' = '$resource') group by \"name\" order by time desc limit 1), ( select \"name\", resource_limit_cpu from alameda_cluster_status..container where \"namespace\" =~ /^[[h_ns]]$/ and \"pod_name\" = '$pod'  group by \"name\" order by time desc limit 1) where ('false' = '$preloader' or '' = '$preloader') order by time desc",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "selected": true,
          "text": "All",
          "value": "$__all"
        },
        "datasource": "InfluxDB",
        "definition": "select alameda_scaler_namespace,scaling_tool from alameda_cluster_status..pod where scaling_tool = 'VPA'",
        "hide": 2,
        "includeAll": true,
        "label": null,
        "multi": false,
        "name": "all_ns",
        "options": [],
        "query": "select alameda_scaler_namespace,scaling_tool from alameda_cluster_status..pod where scaling_tool = 'VPA'",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "selected": true,
          "text": "All",
          "value": "$__all"
        },
        "datasource": "InfluxDB",
        "definition": "select alameda_scaler_name,scaling_tool from alameda_cluster_status..pod where \"alameda_scaler_namespace\" =~ /^[[all_ns]]$/ and scaling_tool= 'VPA'",
        "hide": 2,
        "includeAll": true,
        "label": null,
        "multi": false,
        "name": "all_scaler",
        "options": [],
        "query": "select alameda_scaler_name,scaling_tool from alameda_cluster_status..pod where \"alameda_scaler_namespace\" =~ /^[[all_ns]]$/ and scaling_tool= 'VPA'",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "selected": true,
          "text": "All",
          "value": "$__all"
        },
        "datasource": "InfluxDB",
        "definition": "show tag values on alameda_cluster_status from pod with key = \"name\" where \"alameda_scaler_namespace\" =~ /^[[all_ns]]$/ and \"alameda_scaler_name\" =~ /^[[all_scaler]]$/",
        "hide": 2,
        "includeAll": true,
        "label": null,
        "multi": false,
        "name": "all_pod",
        "options": [],
        "query": "show tag values on alameda_cluster_status from pod with key = \"name\" where \"alameda_scaler_namespace\" =~ /^[[all_ns]]$/ and \"alameda_scaler_name\" =~ /^[[all_scaler]]$/",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      }
    ]
  },
  "time": {
    "from": "now-1h",
    "to": "now+15m"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "timezone": "",
  "title": "VPA Recommendation",
  "uid": "7dqda",
  "version": 1
}
