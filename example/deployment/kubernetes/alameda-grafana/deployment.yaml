---
# Source: grafana/templates/deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: alameda-grafana
  namespace: alameda
  labels:
    app: grafana
    chart: grafana-3.5.7
    release: alameda-grafana
    heritage: Tiller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
      release: alameda-grafana
  strategy:
    rollingUpdate: null
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: grafana
        release: alameda-grafana
      annotations:
        checksum/config: 0f36feee94088210850847dcb340a2f1d798fd5fda88b0e93e60da8eeb6e0376
        checksum/dashboards-json-config: 4a0401262d997fd0383dc9e54fcd23be0f3976f47d6dd8c4f63eb64806a5a5c3
        checksum/sc-dashboard-provider-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/secret: 00084b0f03eb1b635dfa5be3b6358a9ae8d8bddb41ad7b5b1e90303e1e2a4ecd
    spec:
      serviceAccountName: alameda-grafana
      securityContext:
        fsGroup: 472
        runAsUser: 472
        
      initContainers:
        - name: download-dashboards
          image: "appropriate/curl:latest"
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh"]
          args: [ "-c", "mkdir -p /var/lib/grafana/dashboards/default", "/etc/grafana/download_dashboards.sh" ]
          volumeMounts:
            - name: config
              mountPath: "/etc/grafana/download_dashboards.sh"
              subPath: download_dashboards.sh
            - name: storage
              mountPath: "/var/lib/grafana"
      containers:
        - name: grafana
          image: "grafana/grafana:6.2.4"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config
              mountPath: "/etc/grafana/grafana.ini"
              subPath: grafana.ini
            - name: ldap
              mountPath: "/etc/grafana/ldap.toml"
              subPath: ldap.toml
            - name: storage
              mountPath: "/var/lib/grafana"
            - name: dashboards-alameda
              mountPath: "/var/lib/grafana/dashboards/alameda/clusterhealth.json"
              subPath: "clusterhealth.json"
            - name: dashboards-alameda
              mountPath: "/var/lib/grafana/dashboards/alameda/hpa-recommendation.json"
              subPath: "hpa-recommendation.json"
            - name: dashboards-alameda
              mountPath: "/var/lib/grafana/dashboards/alameda/nodehealth.json"
              subPath: "nodehealth.json"
            - name: dashboards-alameda
              mountPath: "/var/lib/grafana/dashboards/alameda/prediction-1day.json"
              subPath: "prediction-1day.json"
            - name: dashboards-alameda
              mountPath: "/var/lib/grafana/dashboards/alameda/vpa-recommendation.json"
              subPath: "vpa-recommendation.json"
            - name: dashboards-alameda
              mountPath: "/var/lib/grafana/dashboards/alameda/vpa-recommendation-alamedascaler.json"
              subPath: "vpa-recommendation-alamedascaler.json"
            - name: dashboards-alameda
              mountPath: "/var/lib/grafana/dashboards/alameda/vpa-recommendation-cluster.json"
              subPath: "vpa-recommendation-cluster.json"
            - name: dashboards-alameda
              mountPath: "/var/lib/grafana/dashboards/alameda/vpa-recommendation-namespace.json"
              subPath: "vpa-recommendation-namespace.json"
            - name: config
              mountPath: "/etc/grafana/provisioning/datasources/datasources.yaml"
              subPath: datasources.yaml
            - name: config
              mountPath: "/etc/grafana/provisioning/dashboards/dashboardproviders.yaml"
              subPath: dashboardproviders.yaml
          ports:
            - name: service
              containerPort: 80
              protocol: TCP
            - name: grafana
              containerPort: 3000
              protocol: TCP
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: alameda-grafana
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: alameda-grafana
                  key: admin-password
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
            
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            
          resources:
            {}
            
      volumes:
        - name: config
          configMap:
            name: alameda-grafana
        - name: dashboards-alameda
          configMap:
            name: alameda-grafana-dashboards-alameda
        - name: ldap
          secret:
            secretName: alameda-grafana
            items:
              - key: ldap-toml
                path: ldap.toml
        - name: storage
          emptyDir: {}
